<?xml version="1.0"?>
<launch>

  <!-- ENV VARS -->
  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="respawn" default="true" />
  <arg name="fcu_frame" default="$(arg UAV_NAME)/fcu" />
  <arg name="CAMERA_NAME" default="basler_$(env BASLER)" />
  <arg name="CAMERA_TYPE" default="basler" />
  <arg name="CAMERA_FRAME" default="$(arg UAV_NAME)/$(arg CAMERA_TYPE)" />
  <arg name="fcu_frame_slashless" default="fcu_$(arg UAV_NAME)" />
  <arg name="node_name" default="$(arg CAMERA_TYPE)" />
  <arg name="namespace" default="$(arg UAV_NAME)"/>
  <arg name="apriltag_namespace" default="apriltag_ros_continuous_node" />
  <!-- configure camera input -->
  <arg name="image_topic" default="image_rect" />
  <arg name="queue_size" default="1" />
  <arg name="config_settings" default="$(find model_states_environment)/config/apriltag/settings.yaml" />
  <arg name="config_tags" default="$(find model_states_environment)/config/apriltag/tags.yaml" />
  <arg name="n_threads" default="8" />


  <group ns="$(arg UAV_NAME)">

      <arg name="debug" default="false" />
      <arg name="mtu_size" default="1500" />
      <arg name="startup_user_set" default="UserSet1"/>
      <arg name="enable_status_publisher" default="true" />
      <arg name="enable_current_params_publisher" default="false" />

      <arg name="config_file" default="$(find model_states_environment)/config/pylon.yaml" />
      <arg name="camera_info_url" default="file://$(find model_states_environment)/config/$(arg CAMERA_NAME).yaml" />

      <arg unless="$(arg debug)" name="launch_prefix" value="" />
      <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />

      <node pkg="nodelet" type="nodelet" name="vision_nodelet_manager" args="manager" output="screen" launch-prefix="$(arg launch_prefix)">
          <param name="num_worker_threads" value="$(arg n_threads)" />
      </node>
      <!-- nodelet-related arguments -->
      <arg name="standalone" default="false" />
      <arg name="manager" default="basler_nodelet_manager" />
      <arg name="pylon_nodelet" value="pylon_camera/PylonCameraNodelet" />
      <arg name="apriltag_nodelet" value="apriltag_ros/ContinuousDetector" />
      <!-- arg unless="$(arg standalone)" name="nodelet_load" value="load $(arg nodelet) $(arg manager)"/-->
      <!-- arg     if="$(arg standalone)" name="nodelet_load" value="standalone $(arg nodelet)"/-->

      <node pkg="nodelet" type="nodelet" name="$(arg CAMERA_TYPE)" args="load $(arg pylon_nodelet) vision_nodelet_manager" output="screen" launch-prefix="$(arg launch_prefix)" respawn="$(arg respawn)" >
        <rosparam command="load" file="$(arg config_file)" />
        <param name="camera_frame" value="$(arg UAV_NAME)/$(arg CAMERA_TYPE)"/>
        <param name="camera_info_url" value="$(arg camera_info_url)"/>
        <param name="gige/mtu_size" value="$(arg mtu_size)"/>
        <param name="startup_user_set" value="$(arg startup_user_set)"/>
        <param name="enable_status_publisher" value="$(arg enable_status_publisher)"/>
        <param name="enable_current_params_publisher" value="$(arg enable_current_params_publisher)"/>
      </node>


      <node pkg="nodelet" type="nodelet" name="$(arg apriltag_namespace)" args="load $(arg apriltag_nodelet) vision_nodelet_manager" output="screen" launch-prefix="$(arg launch_prefix)" respawn="$(arg respawn)" >
        <!-- Remap topics from those used in code to those on the ROS network -->
        <rosparam command="load" file="$(arg config_settings)"/>
        <rosparam command="load" file="$(arg config_tags)"/>
        <remap from="image_rect" to="$(arg CAMERA_TYPE)/$(arg image_topic)" />
        <remap from="camera_info" to="$(arg CAMERA_TYPE)/camera_info" />

        <param name="publish_tag_detections_image" type="bool" value="true" /><!-- default: false -->
        <param name="queue_size" type="int" value="$(arg queue_size)" />

        <!-- load parameters (incl. tag family, tags, etc.) -->
      </node>
      
      <arg name="cam_yaw" default="1.570796327" />
      <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg fcu_frame_slashless)_to_basler" args="0.0 0.14 -0.12 $(arg cam_yaw) -3.14159265359 0.0 $(arg fcu_frame) $(arg CAMERA_FRAME)" />



  
    
</group>

</launch>
